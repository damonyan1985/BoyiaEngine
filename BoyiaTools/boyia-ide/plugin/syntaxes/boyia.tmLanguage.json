{
  "scopeName": "source.boyia",
  "patterns": [
    {
      "include": "#expression"
    }
  ],
  "repository": {
    "expression": {
      "patterns": [
        {
          "include": "#keyword"
        },
        {
          "include": "#keyword-control"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#paren-expression"
        },
        {
          "include": "#constants"
        },
        {
          "include": "#function-def-name"
        },
        {
          "include": "#parameters"
        },
        {
          "include": "#code-expression-base"
        },
        {
          "include": "#code-expression"
        },
        {
          "include": "#comments"
        }
      ]
    },
    "keyword": {
      "match": "class|fun|prop|var|extends|this|super",
      "name": "keyword.letter.boyia"
    },
    "keyword-control": {
      "match": "return|if|elif|else|do|while",
      "name": "keyword.control.boyia"
    },
    "constants": {
      "patterns": [
        {
          "match": "true|false",
          "name": "constant.language.boolean.boyia"
        }
      ]
    },
    "function-def-name": {
      "patterns": [
        {
          "name": "entity.name.function.boyia",
          "match": "(?x)\n \\b ([[:alpha:]_]\\w*) \\b\n"
        }
      ]
    },
    "parameters": {
      "name": "meta.function.parameters.boyia",
      "begin": "(\\()",
      "end": "(\\))",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.parameters.begin.boyia"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.parameters.end.boyia"
        }
      },
      "patterns": [
        {
          "name": "keyword.operator.unpacking.parameter.boyia",
          "match": "(\\*\\*|\\*)"
        },
        {
          "match": "(?x)\n ([[:alpha:]_]\\w*)\n \\s* (?: (,) | (?=[)#\\n=]))\n",
          "captures": {
            "1": {
              "name": "variable.parameter.function.language.boyia"
            },
            "2": {
              "name": "punctuation.separator.parameters.boyia"
            }
          }
        }
      ]
    },
    "expressions": {
			"patterns": [
				{
					"include": "#constants-and-special-vars"
				},
				{
					"include": "#strings"
				},
				{
					"name": "variable.parameter.boyia",
					"match": "[a-zA-Z0-9_]+"
				},
				{
					"begin": "\\{",
					"end": "\\}",
					"patterns": [
						{
							"include": "#expressions"
						}
					]
				}
			]
		},
		"string-interp": {
			"patterns": [
				{
					"name": "meta.embedded.expression.boyia",
					"match": "\\$([a-zA-Z0-9_]+)",
					"captures": {
						"1": {
							"name": "variable.parameter.boyia"
						}
					}
				},
				{
					"name": "meta.embedded.expression.boyia",
					"begin": "\\$\\{",
					"end": "\\}",
					"patterns": [
						{
							"include": "#expressions"
						}
					]
				},
				{
					"name": "constant.character.escape.boyia",
					"match": "\\\\."
				}
			]
		},
    "strings": {
			"patterns": [
				{
					"name": "string.interpolated.triple.double.boyia",
					"begin": "(?<!r)\"\"\"",
					"end": "\"\"\"(?!\")",
					"patterns": [
						{
							"include": "#string-interp"
						}
					]
				},
				{
					"name": "string.interpolated.triple.single.boyia",
					"begin": "(?<!r)'''",
					"end": "'''(?!')",
					"patterns": [
						{
							"include": "#string-interp"
						}
					]
				},
				{
					"name": "string.quoted.triple.double.boyia",
					"begin": "r\"\"\"",
					"end": "\"\"\"(?!\")"
				},
				{
					"name": "string.quoted.triple.single.boyia",
					"begin": "r'''",
					"end": "'''(?!')"
				},
				{
					"name": "string.interpolated.double.boyia",
					"begin": "(?<!\\|r)\"",
					"end": "\"",
					"patterns": [
						{
							"name": "invalid.string.newline",
							"match": "\\n"
						},
						{
							"include": "#string-interp"
						}
					]
				},
				{
					"name": "string.quoted.double.boyia",
					"begin": "r\"",
					"end": "\"",
					"patterns": [
						{
							"name": "invalid.string.newline",
							"match": "\\n"
						}
					]
				},
				{
					"name": "string.interpolated.single.boyia",
					"begin": "(?<!\\|r)'",
					"end": "'",
					"patterns": [
						{
							"name": "invalid.string.newline",
							"match": "\\n"
						},
						{
							"include": "#string-interp"
						}
					]
				},
				{
					"name": "string.quoted.single.boyia",
					"begin": "r'",
					"end": "'",
					"patterns": [
						{
							"name": "invalid.string.newline",
							"match": "\\n"
						}
					]
				}
			]
		},
    "comments": {
			"patterns": [
				{
					"name": "comment.block.empty.boyia",
					"match": "/\\*\\*/",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.boyia"
						}
					}
				},
				{
					"include": "#comments-inline"
				}
			]
		},
    "comments-inline": {
			"patterns": [
				{
					"include": "#comments-block"
				},
				{
					"match": "((//).*)$",
					"captures": {
						"1": {
							"name": "comment.line.double-slash.boyia"
						}
					}
				}
			]
		},
		"comments-block": {
			"patterns": [
				{
					"name": "comment.block.boyia",
					"begin": "/\\*",
					"end": "\\*/",
					"patterns": [
						{
							"include": "#comments-block"
						}
					]
				}
			]
		},
    "paren-expression": {
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": {
        "0": {
          "name": "punctuation.paren.open"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.paren.close"
        }
      },
      "name": "expression.group",
      "patterns": [
        {
          "include": "#keyword"
        },
        {
          "include": "#keyword-control"
        }
      ]
    }
  }
}