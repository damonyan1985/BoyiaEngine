// global object
class EventBus {
    prop events = {};
    
    // key is string type
    fun register(key, cb) {
        var callbacks = events.get(key);
        if (!callbacks) {
            callbacks = new(Array);
            callbacks.put(cb);
            events.put(key, callbacks);
        }
    }
    
    // remove callback by key
    fun remove(key) {
        events.remove(key);
    }
    
    fun removeCallback(key, cb) {
        var callbacks = events.get(key);
        if (!callbacks) {
            return;
        }
        
        callbacks.remove(cb);
    }
    
    // handle callback with data
    fun emit(key, data) {
        var callbacks = events.get(key);
        if (!callbacks) {
            return;
        }
        
        for (var i=0;i<callbacks.size(); i=i+1) {
            var cb = callbacks.get(i);
            cb(data);
        }
    }
}
