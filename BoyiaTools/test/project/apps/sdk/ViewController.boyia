class ViewController extends Object {
    prop contentView = null;
   
    // Life Cycle onCreate();
    fun setContent(view) {
        this.contentView = view;
        this.draw();
    }
    
    fun init() {
        this.onCreate();
        //this.draw();
    }

    fun draw() {
        if (this.contentView) {
            this.contentView.draw();
            this.contentView.commit();
        }
    }

    fun onCreate() {
    }

    fun onResume() {
        if (this.contentView) {
            this.contentView.setVisible(true);
        }
    }

    // 如果上一个ViewController的content是半透明状态下
    // 则只调用onPause，而不调用onStop
    fun onPause() {
        
    }

    // 只有onStop时才设置不可见
    // 底层将不会为不可见的contentView创建渲染指令
    fun onStop() {
        if (this.contentView) {
            this.contentView.setVisible(false);
        }
    }
    
    fun onDestroy() {
    }

    fun test() {
        this.testLog();
    }

    fun testLog() {
        Util.log("test super use");
    }
}
