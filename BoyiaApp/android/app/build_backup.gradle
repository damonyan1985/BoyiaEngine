apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.protobuf'
apply plugin: 'com.boyia.app.bytrace'
apply from: "$rootDir/scripts/library.gradle"

//def getCurrentTime() {
//    Date date = new Date(System.currentTimeMillis())
//    return date.format("yyyyMMddhhmmss")
//}

android {
    signingConfigs {
        sign {
            storeFile file(BOYIA_APP_KEY_STORE)
            storePassword BOYIA_APP_STORE_PWD
            keyPassword BOYIA_APP_KEY_PWD
            keyAlias BOYIA_APP_ALIAS
        }
    }
    namespace gradle.constants.boyiaAppShell
    compileSdk(gradle.constants.sdkVersion)
    //compileSdkVersion gradle.constants.sdkVersion
    defaultConfig {
        applicationId gradle.constants.boyiaAppShell
        minSdkVersion 29
        targetSdkVersion gradle.constants.sdkVersion
        versionCode 1
        versionName gradle.constants.appVersionName
        flavorDimensions "default"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }

        debug {
            debuggable true
            jniDebuggable true
            signingConfig signingConfigs.sign
        }
    }

    productFlavors {
        boyia {
            applicationId 'com.boyia.app.shell'
            versionName "1.0"
            versionCode 1
            applicationIdSuffix ".dev"
            versionNameSuffix = "-DEV"
            manifestPlaceholders = [
                    boyiaChannel: "BoyiaApp"
            ]
        }

        boyiaPlugin {
            applicationId 'com.boyia.app.plugin'
            versionName "1.0"
            versionCode 1
            manifestPlaceholders = [
                    boyiaChannel: "BoyiaPluginApp"
            ]
        }
    }

    sourceSets {
        main {
            java.srcDirs = [
                    'src/main/java',
                    'src/main/aidl',
                    'src/main/kotlin'
            ]
            jniLibs.srcDirs = ['libs', 'jniLibs']
        }

        boyiaPlugin {
            java.srcDirs = ['src/main/plugin']
            //aidl.srcDirs = []
            //manifest.srcFile ''
            //assets.srcDirs = []
            //res.srcDirs = []
        }
    }

    applicationVariants.all { variant ->
        def outputFile
        def outputFileName
        variant.outputs.each {
            outputFile = it.outputFile
            if (null != outputFile && outputFile.name.endsWith('apk')) {
                outputFileName = outputFile.name.substring(0, outputFile.name.indexOf('.'))
                println("outputFileName="+outputFileName)
                //it.outputFileName = outputFileName + "-" + getCurrentTime() + ".apk"
                it.outputFileName = outputFileName + gradle.constants.appVersionName + ".apk"
            }
        }
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.5.1"
        kotlinCompilerVersion '1.9.0'
    }

    buildFeatures {
        compose true
    }
    ndkVersion '26.1.10909125'
}

repositories {
    flatDir {
        dirs 'libs'; dirs library_dir
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${gradle.constants.protoVersion}"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {}
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //debugImplementation project(path: ':core', configuration: 'debug')
    //releaseImplementation project(path: ':core', configuration: 'release')
    //debugImplementation project(':core')
    //releaseImplementation project(':core')
    //implementation gradle.library.boyia_core
    //api project(':util')
    //api project(':loader')
    implementation gradle.library.boyia_core
    api gradle.library.boyia_common
    api gradle.library.boyia_loader
    api gradle.library.okhttp_lib
    api gradle.library.okio_lib
    implementation gradle.library.boyia_debugger
    implementation gradle.library.netty_lib
    // use protobuf begin
    implementation gradle.library.protobuf_lib
    // use protobuf end
    //api 'com.boyia.app.common:common:1.0.0'
    //implementation(name: "core-debug", ext: "aar")
    //implementation project(':utils')
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    //implementation 'com.boyia.app.utils:utils:1.0.0'
    //debugImplementation gradle.library.leakcanary_debug
    //releaseImplementation gradle.library.leakcanary_release

    //implementation project(':advert')
    implementation gradle.library.multidexLib
    implementation gradle.library.androidX
    //implementation "com.android.support:appcompat-v7:28.0.0"
    //implementation "com.android.support:support-annotations:28.0.0"
    //implementation "com.android.support:support-v4:28.0.0"

    implementation gradle.library.umeng_common_lib
    implementation gradle.library.umeng_sdk_lib
    implementation gradle.library.boyia_debugger
    implementation gradle.library.recycler_view
    implementation gradle.library.constraintlayout
    implementation gradle.library.icon_core
//    implementation gradle.library.icon_lib
    implementation gradle.library.icon_google_lib
    implementation gradle.library.icon_google_extend_lib
    implementation gradle.library.icon_material_lib
//    implementation "com.mikepenz:iconics-core:5.3.3"
    // 添加自定义视图依赖（可选项）
//    implementation "com.mikepenz:iconics-views:5.3.3"
    // 选择你想要的字体（可选项）
//    implementation 'com.mikepenz:google-material-typeface:4.0.0.2-kotlin@aar'
//    implementation 'com.mikepenz:google-material-typeface-outlined:4.0.0.1-kotlin@aar'
//    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.8-kotlin@aar'
//    implementation 'com.mikepenz:fontawesome-typeface:5.9.0.2-kotlin@aar'
//    implementation 'com.mikepenz:octicons-typeface:11.1.0.0-kotlin@aar'
//    implementation 'com.mikepenz:meteocons-typeface:1.1.0.7-kotlin@aar'
//    implementation 'com.mikepenz:community-material-typeface:6.4.95.0-kotlin@aar'
//    implementation 'com.mikepenz:weather-icons-typeface:2.0.10.7-kotlin@aar'
//    implementation 'com.mikepenz:typeicons-typeface:2.0.7.7-kotlin@aar'
//    implementation 'com.mikepenz:entypo-typeface:1.0.0.7-kotlin@aar'
//    implementation 'com.mikepenz:devicon-typeface:2.0.0.7-kotlin@aar'
//    implementation 'com.mikepenz:foundation-icons-typeface:3.0.0.7-kotlin@aar'
//    implementation 'com.mikepenz:ionicons-typeface:2.0.1.7-kotlin@aar'
//    implementation 'com.mikepenz:pixeden-7-stroke-typeface:1.2.0.5-kotlin@aar'
//    implementation 'com.mikepenz:material-design-icons-dx-typeface:5.0.1.2-kotlin@aar'
//    implementation 'com.mikepenz:phosphor-typeface:1.0.0.0-kotlin@aar'

    implementation gradle.library.coordinator_lib

    // compose lib
    implementation gradle.library.compose_ui
    implementation gradle.library.compose_foundation
    implementation gradle.library.compose_material
    implementation gradle.library.compose_livedata
    implementation gradle.library.compose_uitool
    implementation gradle.library.compose_rxjava
    implementation gradle.library.compose_activity
    implementation gradle.library.compose_livedata
    // compose coil
    implementation gradle.library.coil_lib
    implementation gradle.library.compose_coil_lib

    // 协程
    implementation gradle.library.coroutines_coreLib
    implementation gradle.library.coroutines_androidLib
}
