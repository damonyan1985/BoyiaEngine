import java.text.DateFormat
import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "$rootDir/library.gradle"

def getCurrentTime() {
    //DateFormat df = new SimpleDateFormat("yyyyMMddhhmmss")
    //return df.format(Calendar.getInstance(Locale.CHINA).getTime())
    Date date = new Date(System.currentTimeMillis())
    return date.format("yyyyMMddhhmmss")
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "com.boyia.app"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        flavorDimensions "default"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        boyia {
            applicationId 'com.boyia.app'
            versionName "1.0"
            versionCode 1
            manifestPlaceholders = [
                    boyiaChannel: "BoyiaApp"
            ]
        }

        boyiaPlugin {
            applicationId 'com.boyia.app.plugin'
            versionName "1.0"
            versionCode 1
            manifestPlaceholders = [
                    boyiaChannel: "BoyiaPluginApp"
            ]
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/aidl']
        }

        boyiaPlugin {
            java.srcDirs = ['src/main/plugin']
            //aidl.srcDirs = []
            //manifest.srcFile ''
            //assets.srcDirs = []
            //res.srcDirs = []
        }
    }

    applicationVariants.all { variant ->
        def outputFile
        def outputFileName
        variant.outputs.each {
            outputFile = it.outputFile
            if (null != outputFile && outputFile.name.endsWith('apk')) {
                outputFileName = outputFile.name.substring(0, outputFile.name.indexOf('.'))
                println("outputFileName="+outputFileName)
                it.outputFileName = outputFileName + "-" + getCurrentTime() + ".apk"
            }
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'; dirs library_dir
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.1.0'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {}
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':core')
    //implementation 'com.boyia.app.core:core:1.0.0'
    //implementation gradle.library.boyia_core
    api project(':util')
    api project(':task')
    api project(':loader')
    implementation gradle.library.netty_lib
    // use protobuf begin
    implementation gradle.library.protobuf_lib
    implementation gradle.library.rxJavaLib
    implementation gradle.library.rxAndroidLib
    //implementation gradle.library.glideLib
    // use protobuf end
    //api 'com.boyia.app.common:common:1.0.0'
    //implementation(name: "core-debug", ext: "aar")
    //implementation project(':utils')
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    //implementation 'com.boyia.app.utils:utils:1.0.0'
    debugImplementation gradle.library.leakcanary_debug
    releaseImplementation gradle.library.leakcanary_release
}

task boyiaUITask << {
    println "boyiaUITask Run"
}

task boyiaTask << {
    println "boyiaTask Run"
}

tasks.whenTaskAdded {
    task ->
        if (task.name.equals("assembleRelease")) {
            boyiaTask.dependsOn boyiaUITask
            boyiaTask.dependsOn assembleRelease
        }
}
